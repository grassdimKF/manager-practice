{"remainingRequest":"D:\\Desktop\\resource\\practice\\flash-vue-admin\\node_modules\\babel-loader\\lib\\index.js!D:\\Desktop\\resource\\practice\\flash-vue-admin\\src\\views\\training\\bookmanager\\bookinfo\\bookinfo.js","dependencies":[{"path":"D:\\Desktop\\resource\\practice\\flash-vue-admin\\src\\views\\training\\bookmanager\\bookinfo\\bookinfo.js","mtime":1689840050575},{"path":"D:\\Desktop\\resource\\practice\\flash-vue-admin\\babel.config.js","mtime":1688901456000},{"path":"D:\\Desktop\\resource\\practice\\flash-vue-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Desktop\\resource\\practice\\flash-vue-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Desktop/resource/practice/flash-vue-admin/node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nrequire(\"core-js/modules/es6.function.name\");\nvar _bookinfo = _interopRequireDefault(require(\"@/api/training/bookinfo\"));\nvar _index = _interopRequireDefault(require(\"@/directive/permission/index.js\"));\nvar _elementUi = require(\"element-ui\");\nvar _default = {\n  //如果需要标签页缓存生效，则需要保证name值和菜单管理中的编码值一致\n  name: 'bookinfo',\n  directives: {\n    permission: _index.default\n  },\n  components: {\n    'el-date-picker': _elementUi.DatePicker\n  },\n  data: function data() {\n    return {\n      formVisible: false,\n      formTitle: '添加图书信息',\n      isAdd: true,\n      options: [{\n        value: 1,\n        label: '中文'\n      }, {\n        value: 2,\n        label: '英文'\n      }, {\n        value: 3,\n        label: '其他'\n      }],\n      form: {\n        name: '',\n        author: '',\n        publicationDate: null,\n        publishingHouse: '',\n        number: '',\n        inventory: '',\n        language: '',\n        typeid: '',\n        description: '',\n        id: ''\n      },\n      formRules: {\n        name: [{\n          required: true,\n          message: '书名' + this.$t('common.isRequired'),\n          trigger: 'blur'\n        }, {\n          min: 1,\n          max: 10,\n          message: '书名字段长度在1到10个字符',\n          trigger: 'blur'\n        }],\n        author: [{\n          required: true,\n          message: '作者' + this.$t('common.isRequired'),\n          trigger: 'blur'\n        }, {\n          min: 1,\n          max: 10,\n          message: '作者字段长度在1到10个字符',\n          trigger: 'blur'\n        }],\n        typeid: [{\n          required: true,\n          message: '类别ID' + this.$t('common.isRequired'),\n          trigger: 'blur'\n        }, {\n          pattern: /^[1-9]\\d*$/,\n          message: '该值应为大于0的数字',\n          trigger: 'blur'\n        }]\n      },\n      listQuery: {\n        page: 1,\n        limit: 10,\n        name: undefined,\n        author: undefined\n      },\n      total: 0,\n      list: null,\n      listLoading: true,\n      selRow: {}\n    };\n  },\n  filters: {\n    statusFilter: function statusFilter(status) {\n      var statusMap = {\n        published: 'success',\n        draft: 'gray',\n        deleted: 'danger'\n      };\n      return statusMap[status];\n    }\n  },\n  created: function created() {\n    this.init();\n  },\n  methods: {\n    init: function init() {\n      this.fetchData();\n    },\n    fetchData: function fetchData() {\n      var _this = this;\n      this.listLoading = true;\n      _bookinfo.default.getList(this.listQuery).then(function (response) {\n        _this.list = response.data.records;\n        _this.listLoading = false;\n        _this.total = response.data.total;\n      });\n    },\n    search: function search() {\n      this.listQuery.page = 1;\n      this.fetchData();\n    },\n    fetchNext: function fetchNext() {\n      this.listQuery.page = this.listQuery.page + 1;\n      this.fetchData();\n    },\n    fetchPrev: function fetchPrev() {\n      this.listQuery.page = this.listQuery.page - 1;\n      this.fetchData();\n    },\n    fetchPage: function fetchPage(page) {\n      this.listQuery.page = page;\n      this.fetchData();\n    },\n    changeSize: function changeSize(limit) {\n      this.listQuery.limit = limit;\n      this.fetchData();\n    },\n    handleCurrentChange: function handleCurrentChange(currentRow) {\n      this.selRow = currentRow;\n    },\n    setValue: function setValue() {\n      this.$forceUpdate();\n    },\n    //日期加四个随机数自动生成图书编号\n    getBookNumber: function getBookNumber() {\n      var date = new Date();\n      var year = date.getFullYear();\n      var month = date.getMonth() + 1;\n      var day = date.getDate();\n      var currentDate = year;\n      if (month >= 10) {\n        currentDate += month;\n      } else {\n        currentDate += '0' + month;\n      }\n      if (day >= 10) {\n        currentDate += day;\n      } else {\n        currentDate += '0' + day;\n      }\n      return currentDate + Math.floor(Math.random() * 10000);\n    },\n    //页面展示语言种类 1:中文，2:英文，3:其他\n    displayLanguage: function displayLanguage(val) {\n      if (val == 1) {\n        return \"中文\";\n      } else if (val == 2) {\n        return \"英文\";\n      } else {\n        return \"其他\";\n      }\n    },\n    resetForm: function resetForm() {\n      //清空表单\n      this.form = {\n        name: '',\n        author: '',\n        publicationDate: '',\n        publishingHouse: '',\n        inventory: '',\n        language: '',\n        typeid: '',\n        description: '',\n        id: '',\n        number: ''\n      };\n    },\n    add: function add() {\n      this.formTitle = '添加图书信息';\n      this.formVisible = true;\n      this.isAdd = true;\n      this.resetForm();\n    },\n    save: function save() {\n      var _this2 = this;\n      this.$refs['form'].validate(function (valid) {\n        if (valid) {\n          var formData = {\n            id: _this2.form.id,\n            name: _this2.form.name,\n            author: _this2.form.author,\n            publicationDate: _this2.form.publicationDate,\n            publishingHouse: _this2.form.publishingHouse,\n            number: _this2.form.number,\n            inventory: _this2.form.inventory,\n            language: _this2.form.language,\n            typeid: _this2.form.typeid,\n            description: _this2.form.description\n          };\n          if (_this2.isAdd) {\n            formData.number = _this2.getBookNumber();\n          }\n          if (formData.id) {\n            _bookinfo.default.update(formData).then(function (response) {\n              _this2.$message({\n                message: _this2.$t('common.optionSuccess'),\n                type: 'success'\n              });\n              _this2.fetchData();\n              _this2.formVisible = false;\n            });\n          } else {\n            _bookinfo.default.add(formData).then(function (response) {\n              _this2.$message({\n                message: _this2.$t('common.optionSuccess'),\n                type: 'success'\n              });\n              _this2.fetchData();\n              _this2.formVisible = false;\n            });\n          }\n        } else {\n          return false;\n        }\n      });\n    },\n    checkSel: function checkSel() {\n      if (this.selRow && this.selRow.id) {\n        return true;\n      }\n      this.$message({\n        message: this.$t('common.mustSelectOne'),\n        type: 'warning'\n      });\n      return false;\n    },\n    editItem: function editItem(record) {\n      this.selRow = record;\n      this.edit();\n    },\n    edit: function edit() {\n      if (this.checkSel()) {\n        this.isAdd = false;\n        var form = Object.assign({}, this.selRow);\n        this.form = form;\n        this.formTitle = '编辑图书信息';\n        this.formVisible = true;\n      }\n    },\n    removeItem: function removeItem(record) {\n      this.selRow = record;\n      this.remove();\n    },\n    remove: function remove() {\n      var _this3 = this;\n      if (this.checkSel()) {\n        var id = this.selRow.id;\n        this.$confirm(this.$t('common.deleteConfirm'), this.$t('common.tooltip'), {\n          confirmButtonText: this.$t('button.submit'),\n          cancelButtonText: this.$t('button.cancel'),\n          type: 'warning'\n        }).then(function () {\n          _bookinfo.default.remove(id).then(function (response) {\n            _this3.$message({\n              message: _this3.$t('common.optionSuccess'),\n              type: 'success'\n            });\n            _this3.fetchData();\n          }).catch(function (err) {\n            _this3.$notify.error({\n              title: '错误',\n              message: err\n            });\n          });\n        }).catch(function () {});\n      }\n    }\n  }\n};\nexports.default = _default;",null]}