{"remainingRequest":"D:\\Desktop\\resource\\practice\\flash-vue-admin\\node_modules\\babel-loader\\lib\\index.js!D:\\Desktop\\resource\\practice\\flash-vue-admin\\src\\views\\login\\login.js?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Desktop\\resource\\practice\\flash-vue-admin\\src\\views\\login\\login.js","mtime":1688901460000},{"path":"D:\\Desktop\\resource\\practice\\flash-vue-admin\\babel.config.js","mtime":1688901456000},{"path":"D:\\Desktop\\resource\\practice\\flash-vue-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Desktop\\resource\\practice\\flash-vue-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Desktop/resource/practice/flash-vue-admin/node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _validate = require(\"@/utils/validate\");\nvar _LangSelect = _interopRequireDefault(require(\"@/components/LangSelect\"));\nvar _default = {\n  name: 'login',\n  components: {\n    LangSelect: _LangSelect.default\n  },\n  data: function data() {\n    var _this = this;\n    var validateUsername = function validateUsername(rule, value, callback) {\n      if (!(0, _validate.isvalidUsername)(value)) {\n        callback(new Error(_this.$t('login.errorAccount')));\n      } else {\n        callback();\n      }\n    };\n    var validatePassword = function validatePassword(rule, value, callback) {\n      if (value.length < 3) {\n        callback(new Error(_this.$t('login.errorPassword')));\n      } else {\n        callback();\n      }\n    };\n    return {\n      loginForm: {\n        username: '',\n        password: ''\n      },\n      loginRules: {\n        username: [{\n          required: true,\n          trigger: 'blur',\n          validator: validateUsername\n        }],\n        password: [{\n          required: true,\n          trigger: 'blur',\n          validator: validatePassword\n        }]\n      },\n      loading: false,\n      pwdType: 'password',\n      redirect: '/'\n    };\n  },\n  mounted: function mounted() {\n    this.init();\n  },\n  methods: {\n    init: function init() {\n      var redirect = this.$route.query.redirect;\n      // console.log('redirect', redirect)\n      if (redirect) {\n        this.redirect = redirect;\n      }\n    },\n    showPwd: function showPwd() {\n      if (this.pwdType === 'password') {\n        this.pwdType = '';\n      } else {\n        this.pwdType = 'password';\n      }\n    },\n    handleLogin: function handleLogin() {\n      var _this2 = this;\n      this.$refs.loginForm.validate(function (valid) {\n        if (valid) {\n          _this2.loading = true;\n          _this2.$store.dispatch('user/login', _this2.loginForm).then(function () {\n            _this2.loading = false;\n            _this2.$router.push({\n              path: _this2.redirect\n            });\n          }).catch(function (err) {\n            _this2.loading = false;\n          });\n        } else {\n          return false;\n        }\n      });\n    }\n  }\n};\nexports.default = _default;",null]}