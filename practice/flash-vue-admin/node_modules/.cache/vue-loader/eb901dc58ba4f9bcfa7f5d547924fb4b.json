{"remainingRequest":"D:\\Desktop\\resource\\practice\\flash-vue-admin\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\Desktop\\resource\\practice\\flash-vue-admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Desktop\\resource\\practice\\flash-vue-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Desktop\\resource\\practice\\flash-vue-admin\\src\\views\\training\\bookmanager\\bookinfo\\index.vue?vue&type=template&id=50b207d0&scoped=true&","dependencies":[{"path":"D:\\Desktop\\resource\\practice\\flash-vue-admin\\src\\views\\training\\bookmanager\\bookinfo\\index.vue","mtime":1690200356691},{"path":"D:\\Desktop\\resource\\practice\\flash-vue-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Desktop\\resource\\practice\\flash-vue-admin\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\Desktop\\resource\\practice\\flash-vue-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Desktop\\resource\\practice\\flash-vue-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"app-container\" },\n    [\n      _c(\n        \"div\",\n        { staticClass: \"block\" },\n        [\n          _c(\n            \"el-row\",\n            { attrs: { gutter: 20 } },\n            [\n              _c(\n                \"el-col\",\n                { attrs: { span: 4 } },\n                [\n                  _c(\"el-input\", {\n                    attrs: { size: \"mini\", placeholder: \"请输入书名\" },\n                    model: {\n                      value: _vm.listQuery.name,\n                      callback: function ($$v) {\n                        _vm.$set(_vm.listQuery, \"name\", $$v)\n                      },\n                      expression: \"listQuery.name\",\n                    },\n                  }),\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-col\",\n                { attrs: { span: 4 } },\n                [\n                  _c(\"el-input\", {\n                    attrs: { size: \"mini\", placeholder: \"请输入作者\" },\n                    model: {\n                      value: _vm.listQuery.author,\n                      callback: function ($$v) {\n                        _vm.$set(_vm.listQuery, \"author\", $$v)\n                      },\n                      expression: \"listQuery.author\",\n                    },\n                  }),\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-col\",\n                { attrs: { span: 6 } },\n                [\n                  _c(\n                    \"el-button\",\n                    {\n                      attrs: {\n                        type: \"success\",\n                        size: \"mini\",\n                        icon: \"el-icon-search\",\n                      },\n                      nativeOn: {\n                        click: function ($event) {\n                          return _vm.search($event)\n                        },\n                      },\n                    },\n                    [_vm._v(_vm._s(_vm.$t(\"button.search\")))]\n                  ),\n                ],\n                1\n              ),\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\"br\"),\n          _vm._v(\" \"),\n          _c(\n            \"el-row\",\n            [\n              _c(\n                \"el-col\",\n                { attrs: { span: 24 } },\n                [\n                  _c(\n                    \"el-button\",\n                    {\n                      attrs: {\n                        type: \"success\",\n                        size: \"mini\",\n                        icon: \"el-icon-plus\",\n                      },\n                      nativeOn: {\n                        click: function ($event) {\n                          return _vm.add($event)\n                        },\n                      },\n                    },\n                    [_vm._v(_vm._s(_vm.$t(\"button.add\")))]\n                  ),\n                ],\n                1\n              ),\n            ],\n            1\n          ),\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"el-table\",\n        {\n          directives: [\n            {\n              name: \"loading\",\n              rawName: \"v-loading\",\n              value: _vm.listLoading,\n              expression: \"listLoading\",\n            },\n          ],\n          attrs: {\n            data: _vm.list,\n            \"element-loading-text\": \"Loading\",\n            border: \"\",\n            fit: \"\",\n            \"highlight-current-row\": \"\",\n          },\n          on: { \"current-change\": _vm.handleCurrentChange },\n        },\n        [\n          _c(\"el-table-column\", {\n            attrs: { label: \"书名\" },\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function (scope) {\n                  return [\n                    _vm._v(\"\\n        \" + _vm._s(scope.row.name) + \"\\n      \"),\n                  ]\n                },\n              },\n            ]),\n          }),\n          _vm._v(\" \"),\n          _c(\"el-table-column\", {\n            attrs: { label: \"作者\" },\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function (scope) {\n                  return [\n                    _vm._v(\n                      \"\\n        \" + _vm._s(scope.row.author) + \"\\n      \"\n                    ),\n                  ]\n                },\n              },\n            ]),\n          }),\n          _vm._v(\" \"),\n          _c(\"el-table-column\", {\n            attrs: { label: \"出版日期\" },\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function (scope) {\n                  return [\n                    _vm._v(\n                      \"\\n        \" +\n                        _vm._s(scope.row.publicationDate) +\n                        \"\\n      \"\n                    ),\n                  ]\n                },\n              },\n            ]),\n          }),\n          _vm._v(\" \"),\n          _c(\"el-table-column\", {\n            attrs: { label: \"出版社\" },\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function (scope) {\n                  return [\n                    _vm._v(\n                      \"\\n        \" +\n                        _vm._s(scope.row.publishingHouse) +\n                        \"\\n      \"\n                    ),\n                  ]\n                },\n              },\n            ]),\n          }),\n          _vm._v(\" \"),\n          _c(\"el-table-column\", {\n            attrs: { label: \"编号\" },\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function (scope) {\n                  return [\n                    _vm._v(\n                      \"\\n        \" + _vm._s(scope.row.number) + \"\\n      \"\n                    ),\n                  ]\n                },\n              },\n            ]),\n          }),\n          _vm._v(\" \"),\n          _c(\"el-table-column\", {\n            attrs: { label: \"库存\" },\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function (scope) {\n                  return [\n                    _vm._v(\n                      \"\\n        \" + _vm._s(scope.row.inventory) + \"\\n      \"\n                    ),\n                  ]\n                },\n              },\n            ]),\n          }),\n          _vm._v(\" \"),\n          _c(\"el-table-column\", {\n            attrs: { label: \"类别\" },\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function (scope) {\n                  return [\n                    _vm._v(\n                      \"\\n        \" + _vm._s(scope.row.typeName) + \"\\n      \"\n                    ),\n                  ]\n                },\n              },\n            ]),\n          }),\n          _vm._v(\" \"),\n          _c(\"el-table-column\", {\n            attrs: { label: \"语言\" },\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function (scope) {\n                  return [\n                    _vm._v(\n                      \"\\n        \" +\n                        _vm._s(_vm.displayLanguage(scope.row.language)) +\n                        \"\\n      \"\n                    ),\n                  ]\n                },\n              },\n            ]),\n          }),\n          _vm._v(\" \"),\n          _c(\"el-table-column\", {\n            attrs: { label: \"书本描述\" },\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function (scope) {\n                  return [\n                    _vm._v(\n                      \"\\n        \" + _vm._s(scope.row.description) + \"\\n      \"\n                    ),\n                  ]\n                },\n              },\n            ]),\n          }),\n          _vm._v(\" \"),\n          _c(\"el-table-column\", {\n            attrs: { label: \"操作\" },\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function (scope) {\n                  return [\n                    _c(\n                      \"el-button\",\n                      {\n                        attrs: {\n                          type: \"text\",\n                          size: \"mini\",\n                          icon: \"el-icon-edit\",\n                        },\n                        nativeOn: {\n                          click: function ($event) {\n                            return _vm.editItem(scope.row)\n                          },\n                        },\n                      },\n                      [_vm._v(_vm._s(_vm.$t(\"button.edit\")))]\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"el-button\",\n                      {\n                        attrs: {\n                          type: \"text\",\n                          size: \"mini\",\n                          icon: \"el-icon-delete\",\n                        },\n                        nativeOn: {\n                          click: function ($event) {\n                            return _vm.removeItem(scope.row)\n                          },\n                        },\n                      },\n                      [_vm._v(_vm._s(_vm.$t(\"button.delete\")))]\n                    ),\n                  ]\n                },\n              },\n            ]),\n          }),\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\"el-pagination\", {\n        attrs: {\n          background: \"\",\n          layout: \"total, sizes, prev, pager, next, jumper\",\n          \"page-sizes\": [10, 20, 50, 100, 500],\n          \"page-size\": _vm.listQuery.limit,\n          total: _vm.total,\n        },\n        on: {\n          \"size-change\": _vm.changeSize,\n          \"current-change\": _vm.fetchPage,\n          \"prev-click\": _vm.fetchPrev,\n          \"next-click\": _vm.fetchNext,\n        },\n      }),\n      _vm._v(\" \"),\n      _c(\n        \"el-dialog\",\n        {\n          attrs: {\n            title: _vm.formTitle,\n            visible: _vm.formVisible,\n            width: \"70%\",\n          },\n          on: {\n            \"update:visible\": function ($event) {\n              _vm.formVisible = $event\n            },\n          },\n        },\n        [\n          _c(\n            \"el-form\",\n            {\n              ref: \"form\",\n              attrs: {\n                model: _vm.form,\n                rules: _vm.formRules,\n                \"label-width\": \"120px\",\n              },\n            },\n            [\n              _c(\n                \"el-row\",\n                [\n                  _c(\n                    \"el-col\",\n                    { attrs: { span: 12 } },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        { attrs: { label: \"书名\", prop: \"name\" } },\n                        [\n                          _c(\"el-input\", {\n                            attrs: { minlength: \"1\" },\n                            model: {\n                              value: _vm.form.name,\n                              callback: function ($$v) {\n                                _vm.$set(_vm.form, \"name\", $$v)\n                              },\n                              expression: \"form.name\",\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-col\",\n                    { attrs: { span: 12 } },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        { attrs: { label: \"作者\", prop: \"author\" } },\n                        [\n                          _c(\"el-input\", {\n                            attrs: { minlength: \"1\" },\n                            model: {\n                              value: _vm.form.author,\n                              callback: function ($$v) {\n                                _vm.$set(_vm.form, \"author\", $$v)\n                              },\n                              expression: \"form.author\",\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-col\",\n                    { attrs: { span: 12 } },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        { attrs: { label: \"出版日期\" } },\n                        [\n                          _c(\"el-date-picker\", {\n                            attrs: {\n                              minlength: \"1\",\n                              \"value-format\": \"yyyy-MM-dd\",\n                            },\n                            model: {\n                              value: _vm.form.publicationDate,\n                              callback: function ($$v) {\n                                _vm.$set(_vm.form, \"publicationDate\", $$v)\n                              },\n                              expression: \"form.publicationDate\",\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-col\",\n                    { attrs: { span: 12 } },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        { attrs: { label: \"出版社\" } },\n                        [\n                          _c(\"el-input\", {\n                            attrs: { minlength: \"1\" },\n                            model: {\n                              value: _vm.form.publishingHouse,\n                              callback: function ($$v) {\n                                _vm.$set(_vm.form, \"publishingHouse\", $$v)\n                              },\n                              expression: \"form.publishingHouse\",\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-col\",\n                    { attrs: { span: 12 } },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        { attrs: { label: \"库存\" } },\n                        [\n                          _c(\"el-input\", {\n                            attrs: { minlength: \"1\" },\n                            model: {\n                              value: _vm.form.inventory,\n                              callback: function ($$v) {\n                                _vm.$set(_vm.form, \"inventory\", $$v)\n                              },\n                              expression: \"form.inventory\",\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-col\",\n                    { attrs: { span: 12 } },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        { attrs: { label: \"类别\", prop: \"typeid\" } },\n                        [\n                          _c(\"el-input\", {\n                            attrs: { minlength: \"1\" },\n                            model: {\n                              value: _vm.form.typeid,\n                              callback: function ($$v) {\n                                _vm.$set(_vm.form, \"typeid\", $$v)\n                              },\n                              expression: \"form.typeid\",\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-col\",\n                    { attrs: { span: 12 } },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        { attrs: { label: \"语言\" } },\n                        [\n                          _c(\n                            \"el-select\",\n                            {\n                              attrs: { placeholder: \"请选择\" },\n                              on: {\n                                change: function ($event) {\n                                  return _vm.setValue($event)\n                                },\n                              },\n                              model: {\n                                value: _vm.form.language,\n                                callback: function ($$v) {\n                                  _vm.$set(_vm.form, \"language\", $$v)\n                                },\n                                expression: \"form.language\",\n                              },\n                            },\n                            _vm._l(_vm.options, function (item) {\n                              return _c(\"el-option\", {\n                                key: item.value,\n                                attrs: { label: item.label, value: item.value },\n                              })\n                            }),\n                            1\n                          ),\n                        ],\n                        1\n                      ),\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-col\",\n                    { attrs: { span: 12 } },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        { attrs: { label: \"书本描述\" } },\n                        [\n                          _c(\"el-input\", {\n                            attrs: {\n                              type: \"textarea\",\n                              rows: 2,\n                              placeholder: \"请输入内容\",\n                            },\n                            model: {\n                              value: _vm.form.description,\n                              callback: function ($$v) {\n                                _vm.$set(_vm.form, \"description\", $$v)\n                              },\n                              expression: \"form.description\",\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                    ],\n                    1\n                  ),\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                [\n                  _c(\n                    \"el-button\",\n                    { attrs: { type: \"primary\" }, on: { click: _vm.save } },\n                    [_vm._v(_vm._s(_vm.$t(\"button.submit\")))]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-button\",\n                    {\n                      nativeOn: {\n                        click: function ($event) {\n                          _vm.formVisible = false\n                        },\n                      },\n                    },\n                    [_vm._v(_vm._s(_vm.$t(\"button.cancel\")))]\n                  ),\n                ],\n                1\n              ),\n            ],\n            1\n          ),\n        ],\n        1\n      ),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}